{
  "name": "shrinkroute",
  "description": "Easy named routes for Express.",
  "version": "0.3.3",
  "main": "./index.js",
  "keywords": [
    "express",
    "route",
    "named",
    "nested",
    "middleware"
  ],
  "author": {
    "name": "Gustavo Henke",
    "url": "https://github.com/gustavohenke"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/gustavohenke/shrinkroute.git"
  },
  "bugs": {
    "url": "https://github.com/gustavohenke/shrinkroute/issues"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "dependencies": {
    "qs": "~1.2.1",
    "extend": "~1.2.1"
  },
  "devDependencies": {
    "chai": "~1.9.0",
    "express": "3.x.x",
    "mocha": "~1.17.0",
    "sinon": "~1.9.0",
    "jscoverage": "~0.3.8",
    "mocha-lcov-reporter": "~0.0.1",
    "coveralls": "~2.8.0"
  },
  "scripts": {
    "prepublish": "npm prune",
    "preci-test": "jscoverage src src-cov",
    "test": "mocha",
    "ci-test": "SHRINKR_COV=1 mocha -R mocha-lcov-reporter | coveralls"
  },
  "license": "MIT",
  "readme": "# Shrinkroute\n[![Build Status](http://img.shields.io/travis/gustavohenke/shrinkroute.svg?style=flat)](https://travis-ci.org/gustavohenke/shrinkroute)\n[![NPM version](http://img.shields.io/npm/v/shrinkroute.png?style=flat)](http://badge.fury.io/js/shrinkroute)\n[![Dependency Status](http://img.shields.io/gemnasium/gustavohenke/shrinkroute.svg?style=flat)](https://gemnasium.com/gustavohenke/shrinkroute)\n[![Coverage Status](http://img.shields.io/coveralls/gustavohenke/shrinkroute.svg?style=flat)](https://coveralls.io/r/gustavohenke/shrinkroute)\n\nNamed and nested routes for Express 3+, with URL building support. Helps you in achieving DRY routes!\n\nEasy as that:\n```javascript\nvar shrinkr = shrinkroute( app, {\n    \"user\": {\n        path: \"/user/:id?\",\n        get: showOrListUsers,\n        post: [ requireAuthentication, createUser ],\n        put: [ requireAuthentication, updateUser ]\n    }\n});\n\n// in your routes...\nfunction createUser( req, res, next ) {\n    User.create(..., function( err, userId ) {\n        // redirects to /user/1 (or any other userId...)\n        res.redirect( req.buildUrl( \"user\", { id: userId } ) );\n\n        // if full URLs are needed, try below - redirects to http://foobar.com/user/1\n        res.redirect( req.buildFullUrl( \"user\", { id: userId } ) );\n    });\n}\n\n// or views...\n<a href=\"<%= url( \"user\", { id: 1 }) %>\">User profile</a>\n<a href=\"<%= fullUrl( \"user\", { id: 1 }) %>\">User profile</a>\n```\n\n__ATTENTION:__ Version 0.3.0 automatically adds the middleware responsible for providing URL builders in the view. When upgrading from previous versions, remove `app.use( shrinkr.middleware );` line.\n\n## Nested routes\n\nNested routes are separated by an character, which is by default `.` (you may customize it if you want). When you set nested routes, they'll inherit their parent's route.\nFor example:\n\n```javascript\nshrinkroute( app, {\n    \"admin\": {\n        path: \"/admin\"\n    },\n    \"admin.users\": {\n        path: \"/users\"\n    }\n});\n```\n\nThis will end up in a route named `admin` which map to `/admin`, and another route named `admin.users` which map to `/admin/users`.\n\n\n## URL Builders in the view and in the request\nThe following functions are automatically available to you in every route _set by Shrinkroute_:\n* `req.buildUrl` and `res.locals.url` - builds paths for a route. The same as using `shrinkr.url()`.\n* `req.buildFullUrl` and `res.locals.fullUrl` - builds full URLs for a route. The same as using `shrinkr.fullUrl()`.\n\n## Installation\n\nInstall Shrinkroute via NPM:\n\n```shell\nnpm install shrinkroute\n```\n\n## API\n\n### `[new] shrinkroute( [app][, routes][, separator = \".\"] )`\nReturns a new instance of Shrinkroute. This is a shortcut for the following:\n\n```javascript\nvar shrinkr = shrinkroute();\nshrinkr.app( app );\nshrinkr.separator( separator );\nshrinkr.route( routes );\n```\n\n### `.app( [app] )`\nGet or set the app of this Shrinkroute instance.\nIf setting the app, the following things will be available from now on:\n\n* `app.shrinkroute` - the Shrinkroute instance\n* `req.route.name` - the name of the matched route\n\n### `.route( name[, route] )`\nGet or set a route by its name. When setting the route, the route path must be passed as `route.path`.\n\n### `.route( name, path, route )`\nSet a route.\n\n### `.route( [routes] )`\nGet all routes or set various routes at once.\n\n### `.separator( [separator] )`\nGet or set the routes namespace separator. Useful for when using nested routes.\n\n### `.url( name[, params][, append] )`\nBuild the URL for a route. If the route path has parameters in the Express style (`:param`), they must be passed as a object in the `params` argument:\n\n```javascript\nshrinkr.url( \"user\", {\n    id: 1\n});\n```\n\nIf they're not passed, the returned URL will be blank. However, if you mark it as optional (`:param?`), it'll not be required.\n\nParameters passed in the `params` object that are not defined in the route will be appended to the query string, unless the `append` argument is falsy.\n\n```javascript\nshrinkr.url( \"users\", {\n    name: \"foo\"\n});\n\n// => /users?name=foo\n\nshrinkr.url( \"users\", {\n    name: \"foo\"\n}, false);\n\n// => /users\n```\n\n### `.fullUrl( name[, params][, append] )`\nBuilds full URLs for a given route that include protocol, host and port. Respects the same rules as `.url()`.\n\n```javascript\nreq.buildFullUrl( \"users\", {\n  name: \"foo\"\n});\n\n// => http://foobar.com/users?name=foo\n```\n\n## Testing\n\nShrinkroute is tested with [Mocha](http://visionmedia.github.io/mocha). Inside the project root, run:\n\n```shell\nnpm install\nnpm test\n```\n\nThis will do the job for you!\n\n## License\nMIT\n",
  "readmeFilename": "README.md",
  "_id": "shrinkroute@0.3.3",
  "dist": {
    "shasum": "77823ead51019f0ded86f4d3f0c23f7f1574f54a"
  },
  "_from": "shrinkroute@",
  "_resolved": "https://registry.npmjs.org/shrinkroute/-/shrinkroute-0.3.3.tgz"
}
